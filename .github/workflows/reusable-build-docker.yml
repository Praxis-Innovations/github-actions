name: Yarn Build and Docker

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '18'
        type: string
      project-type:
        description: 'Project type (react, nextjs, express, generic)'
        required: false
        default: 'nextjs'
        type: string
      build-command:
        description: 'Yarn build command to run'
        required: false
        default: 'yarn build'
        type: string
      test-command:
        description: 'Yarn test command to run'
        required: false
        default: 'yarn test --watchAll=false --coverage --passWithNoTests'
        type: string
      start-command:
        description: 'Yarn start command for the container'
        required: false
        default: 'yarn start'
        type: string
      build-output-dirs:
        description: 'Build output directories to cache (comma-separated)'
        required: false
        default: 'build/,dist/'
        type: string
      dockerfile-path:
        description: 'Path to Dockerfile (use Dockerfile.generic for generic builds)'
        required: false
        default: './Dockerfile.generic'
        type: string
      docker-context:
        description: 'Docker build context'
        required: false
        default: '.'
        type: string
      registry:
        description: 'Container registry to use'
        required: false
        default: 'ghcr.io'
        type: string
      image-name:
        description: 'Image name (defaults to repository name)'
        required: false
        default: ''
        type: string
      port:
        description: 'Port to expose in container'
        required: false
        default: '3000'
        type: string
      yarn-version:
        description: 'Yarn version to use (1.x, 2.x, 3.x)'
        required: false
        default: '1.x'
        type: string
      enable-yarn-berry:
        description: 'Enable Yarn Berry (2.x/3.x) features'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ${{ inputs.registry }}
  IMAGE_NAME: ${{ inputs.image-name || github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'
        
    - name: Setup Yarn
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'
        
    - name: Enable Yarn Berry (if requested)
      if: inputs.enable-yarn-berry == 'true'
      run: |
        corepack enable
        yarn set version ${{ inputs.yarn-version }}
        
    - name: Verify Yarn installation
      run: |
        yarn --version
        yarn config get version
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile --prefer-offline
      
    - name: Run tests
      run: ${{ inputs.test-command }}
      
    - name: Build project
      run: ${{ inputs.build-command }}
      
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: |
          ${{ inputs.build-output-dirs }}
          node_modules/
          .yarn/cache
          .yarn/install-state.gz
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Restore build cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ inputs.build-output-dirs }}
          node_modules/
          .yarn/cache
          .yarn/install-state.gz
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile-path }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          NODE_VERSION=${{ inputs.node-version }}
          PROJECT_TYPE=${{ inputs.project-type }}
          BUILD_OUTPUT_DIR=${{ inputs.build-output-dirs.split(',')[0] }}
          START_COMMAND=${{ inputs.start-command }}
          PORT=${{ inputs.port }}
          YARN_VERSION=${{ inputs.yarn-version }}
          ENABLE_YARN_BERRY=${{ inputs.enable-yarn-berry }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
